# GDEF Mark Attachment Classes
@MarkClass1=[CombLtnSmA CombLtnSmA.SngStory CombLtnSmC CombLtnSmD 
CombLtnSmE CombLtnSmH CombLtnSmI CombLtnSmM CombLtnSmO CombLtnSmR 
CombLtnSmT CombLtnSmU CombLtnSmV CombLtnSmX CombTrndCommaAbv 
CombRevCommaAbv CombAcute CombDblAcute CombGrave CombDblGrave CombCircum 
CombCircumAcute.VN CombCircumGrave.VN CombCircumTilde.VN CombCircumHook.VN 
CombInvBreve CombInvBreve.UU CombInvBreve.UL CombInvBreve.LL CombFermata 
CombDblInvBreve.UU CombDblInvBreve.UL CombDblInvBreve.LL CombBreve 
CombBreveAcute.VN CombBreveGrave.VN CombBreveTilde.VN CombBreveHook.VN 
CombCandrabindu CombBreve.CyShortMrkAlt CombBreve.CyShortMrkAlt.UCHt 
CombBreve_Macron CombCaron CombAcute_Macron CombMacron_Acute 
CombMacron_Breve CombGrave_Macron CombMacron_Grave CombAcute_Grave_Acute 
CombGrave_Acute_Grave CombTilde CombNotTildeAbv CombAlmostEqToAbv 
CombHomotheticAbv CombVertTilde CombZigZagAbv CombXAbv CombMacron 
CombMacron.Short CombOverline CombDblOverline CombDiaer CombDiaer.UU 
CombDiaer.LL CombDiaer.UL CombDiaer.Sup CombDotAbv CombCommaAbv 
CombRingAbv CombLftHalfRingAbv CombRtHalfRingAbv CombHookAbv 
CombVertLineAbv CombDblVertLineAbv CombBridgeAbv CombLftArrwhdAbv 
CombRtArrwhdAbv CombAcute_MacronDep CombMacron_AcuteDep 
CombGrave_MacronDep CombMacron_GraveDep CombAcute_Grave_AcuteDep 
CombGrave_Acute_GraveDep CombKayanGraveAcute]; 


lookup di_sub {
  lookupflag 0;
    sub @cno_dotlss by @c_dotlss;
} di_sub;

@c_i_tilde_blw = [LtnSmITildeBlw LtnSmITildeBlw.SItal];
@c_di_tilde_blw = [LtnSmI.Dotless LtnSmI.Dotless.SItal];
@c_i_dot_blw = [LtnSmIDotBlw LtnSmIDotBlw.SItal];
@c_di_dot_blw = [LtnSmI.Dotless LtnSmI.Dotless.SItal];

lookup di_csub {
  lookupflag 0;
    sub @c_i_tilde_blw by @c_di_tilde_blw CombTildeBlw;
    sub @c_i_dot_blw by @c_di_dot_blw CombDotBlw;
    sub LtnSmIOgonek by LtnSmI.Dotless CombOgonek;
    # sub LtnSmIRetrHook by LtnSmI.Dotless CombOgonek.RetroHook; # wrong kind of RetrHook
} di_csub;

# Use markClasses from psfmakefea since they can be used as glyph classes
@c_u_diacs = @_U;
@c_non_u_diacs = [@_L @_O @_H @R_];

@c_i_diac_blw = [@c_i_tilde_blw @c_i_dot_blw LtnSmIOgonek];

lookup di_ctx {
  lookupflag 0;
    sub @cno_dotlss'lookup di_sub  @c_u_diacs' ;
    sub @cno_dotlss'lookup di_sub  @c_non_u_diacs' @c_u_diacs' ;
    sub @cno_dotlss'lookup di_sub  @c_non_u_diacs' @c_non_u_diacs' @c_u_diacs' ;
    sub @cno_dotlss'lookup di_sub  @c_non_u_diacs' @c_non_u_diacs' @c_non_u_diacs' @c_u_diacs' ;
    sub @cno_dotlss'lookup di_sub  @c_non_u_diacs' @c_non_u_diacs' @c_non_u_diacs' @c_non_u_diacs' @c_u_diacs' ;
    sub @c_i_diac_blw'lookup di_csub  @c_u_diacs' ;
    sub @c_i_diac_blw'lookup di_csub  @c_non_u_diacs' @c_u_diacs' ;
    sub @c_i_diac_blw'lookup di_csub  @c_non_u_diacs' @c_non_u_diacs' @c_u_diacs' ;
    sub @c_i_diac_blw'lookup di_csub  @c_non_u_diacs' @c_non_u_diacs' @c_non_u_diacs' @c_u_diacs' ;
    sub @c_i_diac_blw'lookup di_csub  @c_non_u_diacs' @c_non_u_diacs' @c_non_u_diacs' @c_non_u_diacs' @c_u_diacs' ;
} di_ctx;

lookup vd_sub {
  lookupflag MarkAttachmentType @MarkClass1;
    sub CombCircum CombAcute  by CombCircumAcute.VN;
    sub CombCircum CombGrave  by CombCircumGrave.VN;
    sub CombCircum CombTilde  by CombCircumTilde.VN;
    sub CombCircum CombHookAbv  by CombCircumHook.VN;
    sub CombBreve CombAcute  by CombBreveAcute.VN;
    sub CombBreve CombGrave  by CombBreveGrave.VN;
    sub CombBreve CombTilde  by CombBreveTilde.VN;
    sub CombBreve CombHookAbv  by CombBreveHook.VN;
} vd_sub;

lookup vc_sub {
  lookupflag 0;
    sub @cno_viet by @c_viet;
} vc_sub;

lookup srb_sub {
  lookupflag 0;
    sub @cno_Serb by @c_Serb;
} srb_sub;

lookup ss_sub {
  lookupflag 0;
    sub @cno_Sup by @c_Sup;
} ss_sub;

lookup ss_ctx {
  lookupflag 0;
    sub @c_superscripts @cno_Sup' lookup ss_sub;
} ss_ctx;

lookup sc1_sub {
  lookupflag 0;
    # sub @cno_sc by @c_sc;
    sub @cno_smcp by @c_smcp;
    sub LtnSmRBar by LtnSmRBarredStem.sc;
    sub CySmPalochka by CyPalochka.sc;
    sub LtnSmTurnedE by LtnSmRevE.sc;
} sc1_sub;

lookup sc2_sub {
  lookupflag 0;
    sub @cno_c2sc by @c_c2sc;
    sub CyPalochka by CyPalochka.sc;
} sc2_sub;

lookup f_sub {
  lookupflag 0;
    sub LtnSmF LtnSmI  by LtnLigSmFSmI;
    sub LtnSmF LtnSmL  by LtnLigSmFSmL;
    sub LtnSmF LtnSmF LtnSmI  by LtnLigSmFSmFSmI;
    sub LtnSmF LtnSmF LtnSmL  by LtnLigSmFSmFSmL;
    sub LtnSmF LtnSmF  by LtnLigSmFSmF;
} f_sub;

# used to generate glyph classes
def SeqGen(n) {
    l = list()
    for i in range(1, 6):
        for j in range(1, 6):
            ltr = n + str(i) + str(j)
            l.append(ltr)
    return l
} SeqGen;

# glyph classes used below
do  let l = SeqGen('TnLtrSeg');
    let s = ' '.join(l);
    {
    @TnLtrSeg = [$s];
    }
# @TnLtrSeg = [];

do  let l = SeqGen('TnContRt');
    let s = ' '.join(l);
    {
    @TnContRt = [$s];
    }
# @TnContRt = [];

do  let l = SeqGen('TnContLft');
    let s = ' '.join(l);
    {
    @TnContLft = [$s];
    }
# @TnContLft = [];

# create a glyph class of all non-tone glyphs
def NonTns() {
    l = list()
    for g in allglyphs():
        if not re.search('.*Tn(Ltr|Cont|Staff).*', g):
            l.append(g)
    return l
} NonTns;

do  let l = NonTns();
    let s = ' '.join(l);
    {
    @NonTn = [$s];
    }
# @NonTn = [];

@TnLtrs = [TnLtr5 TnLtr4 TnLtr3 TnLtr2 TnLtr1 ];
@LftStemTnLtrs = [LftStemTnLtr5 LftStemTnLtr4 LftStemTnLtr3 LftStemTnLtr2 LftStemTnLtr1 ];

# substitute contours for tone letters
#  based on the level of the current tone and the following (or preceding) one
# substitute a staff for the last (or first) tone letter
# glyphs will connect in their default position
# the glyph on the end of the sequence opposite the staff needs spacing added, see tne_ctx
#  (staffs already have spacing)
# supports any number of tone bars
lookup tn_ctx {
  lookupflag 0;
    # ignore two isolated tones of the same level next to each
    #  unfortunately will not match if they are at a segment boundary
    ignore sub @NonTn TnLtr5' TnLtr5' @NonTn;
    ignore sub @NonTn TnLtr4' TnLtr4' @NonTn;
    ignore sub @NonTn TnLtr3' TnLtr3' @NonTn;
    ignore sub @NonTn TnLtr2' TnLtr2' @NonTn;
    ignore sub @NonTn TnLtr1' TnLtr1' @NonTn;

    sub @TnLtrs' [TnLtr1 ] by [TnLtrSeg51 TnLtrSeg41 TnLtrSeg31 TnLtrSeg21 TnLtrSeg11 ];
    sub @TnLtrs' [TnLtr2 ] by [TnLtrSeg52 TnLtrSeg42 TnLtrSeg32 TnLtrSeg22 TnLtrSeg12 ];
    sub @TnLtrs' [TnLtr3 ] by [TnLtrSeg53 TnLtrSeg43 TnLtrSeg33 TnLtrSeg23 TnLtrSeg13 ];
    sub @TnLtrs' [TnLtr4 ] by [TnLtrSeg54 TnLtrSeg44 TnLtrSeg34 TnLtrSeg24 TnLtrSeg14 ];
    sub @TnLtrs' [TnLtr5 ] by [TnLtrSeg55 TnLtrSeg45 TnLtrSeg35 TnLtrSeg25 TnLtrSeg15 ];
    sub @TnLtrSeg @TnLtrs' by [TnStaffRt5 TnStaffRt4 TnStaffRt3 TnStaffRt2 TnStaffRt1 ];

    ignore sub @NonTn LftStemTnLtr5' LftStemTnLtr5' @NonTn;
    ignore sub @NonTn LftStemTnLtr4' LftStemTnLtr4' @NonTn;
    ignore sub @NonTn LftStemTnLtr3' LftStemTnLtr3' @NonTn;
    ignore sub @NonTn LftStemTnLtr2' LftStemTnLtr2' @NonTn;
    ignore sub @NonTn LftStemTnLtr1' LftStemTnLtr1' @NonTn;

    sub [TnStaffLft1 TnLtrSeg11 TnLtrSeg21 TnLtrSeg31 TnLtrSeg41 TnLtrSeg51 ] @LftStemTnLtrs' by 
      [TnLtrSeg15 TnLtrSeg14 TnLtrSeg13 TnLtrSeg12 TnLtrSeg11 ];
    sub [TnStaffLft2 TnLtrSeg12 TnLtrSeg22 TnLtrSeg32 TnLtrSeg42 TnLtrSeg52 ] @LftStemTnLtrs' by 
      [TnLtrSeg25 TnLtrSeg24 TnLtrSeg23 TnLtrSeg22 TnLtrSeg21 ];
    sub [TnStaffLft3 TnLtrSeg13 TnLtrSeg23 TnLtrSeg33 TnLtrSeg43 TnLtrSeg53 ] @LftStemTnLtrs' by 
      [TnLtrSeg35 TnLtrSeg34 TnLtrSeg33 TnLtrSeg32 TnLtrSeg31 ];
    sub [TnStaffLft4 TnLtrSeg14 TnLtrSeg24 TnLtrSeg34 TnLtrSeg44 TnLtrSeg54 ] @LftStemTnLtrs' by 
      [TnLtrSeg45 TnLtrSeg44 TnLtrSeg43 TnLtrSeg42 TnLtrSeg41 ];
    sub [TnStaffLft5 TnLtrSeg15 TnLtrSeg25 TnLtrSeg35 TnLtrSeg45 TnLtrSeg55 ] @LftStemTnLtrs' by 
      [TnLtrSeg55 TnLtrSeg54 TnLtrSeg53 TnLtrSeg52 TnLtrSeg51 ];
    sub @LftStemTnLtrs' @LftStemTnLtrs by 
      [TnStaffLft5 TnStaffLft4 TnStaffLft3 TnStaffLft2 TnStaffLft1];
} tn_ctx;

# substitute a glyph with spacing for one without spacing in right stem clusters
lookup tner_sub {
  lookupflag 0;
    sub @TnLtrSeg by @TnContRt;
} tner_sub;

# substitute a glyph with spacing for one without spacing in left stem clusters
lookup tnel_sub {
  lookupflag 0;
    sub @TnLtrSeg by @TnContLft;
} tnel_sub;

@TnStaffRt = [TnStaffRt5 TnStaffRt4 TnStaffRt3 TnStaffRt2 TnStaffRt1 ];
@TnStaffLft = [TnStaffLft5 TnStaffLft4 TnStaffLft3 TnStaffLft2 TnStaffLft1 ];

# add a spacing glyph to the opposite end of a cluster from the staff
#  supports up to seven tone bars
lookup tne_ctx {
  lookupflag 0;
    sub @TnLtrSeg'lookup tner_sub @TnLtrSeg' @TnLtrSeg' @TnLtrSeg' @TnLtrSeg' @TnLtrSeg' @TnStaffRt'; 
    sub @TnLtrSeg'lookup tner_sub @TnLtrSeg' @TnLtrSeg' @TnLtrSeg' @TnLtrSeg' @TnStaffRt'; 
    sub @TnLtrSeg'lookup tner_sub @TnLtrSeg' @TnLtrSeg' @TnLtrSeg' @TnStaffRt';
    sub @TnLtrSeg'lookup tner_sub @TnLtrSeg' @TnLtrSeg' @TnStaffRt';
    sub @TnLtrSeg'lookup tner_sub @TnLtrSeg' @TnStaffRt';
    sub @TnLtrSeg'lookup tner_sub @TnStaffRt';

    sub @TnStaffLft' @TnLtrSeg' @TnLtrSeg' @TnLtrSeg' @TnLtrSeg' @TnLtrSeg' @TnLtrSeg'lookup tnel_sub;
    sub @TnStaffLft' @TnLtrSeg' @TnLtrSeg' @TnLtrSeg' @TnLtrSeg' @TnLtrSeg'lookup tnel_sub;
    sub @TnStaffLft' @TnLtrSeg' @TnLtrSeg' @TnLtrSeg' @TnLtrSeg'lookup tnel_sub;
    sub @TnStaffLft' @TnLtrSeg' @TnLtrSeg' @TnLtrSeg'lookup tnel_sub;
    sub @TnStaffLft' @TnLtrSeg' @TnLtrSeg'lookup tnel_sub;
    sub @TnStaffLft' @TnLtrSeg'lookup tnel_sub;
} tne_ctx;

@TnLtrsNo = [TnLtr5no TnLtr4no TnLtr3no TnLtr2no TnLtr1no ];
@LftStemTnLtrsNo = [LftStemTnLtr5no LftStemTnLtr4no LftStemTnLtr3no LftStemTnLtr2no LftStemTnLtr1no ];

@TnStaffRtNo = [TnStaffRt5no TnStaffRt4no TnStaffRt3no TnStaffRt2no TnStaffRt1no ];
@TnStaffLftNo = [TnStaffLft5no TnStaffLft4no TnStaffLft3no TnStaffLft2no TnStaffLft1no ];

# substitute numerals for tone bars
lookup tnn_sub {
  lookupflag 0;
    sub TnLtr5 by [SupFive ];
    sub TnLtr4 by [SupFour ];
    sub TnLtr3 by [SupThree ];
    sub TnLtr2 by [SupTwo ];
    sub TnLtr1 by [SupOne ];
    sub LftStemTnLtr5 by [SupFive ];
    sub LftStemTnLtr4 by [SupFour ];
    sub LftStemTnLtr3 by [SupThree ];
    sub LftStemTnLtr2 by [SupTwo ];
    sub LftStemTnLtr1 by [SupOne ];
} tnn_sub;

# the following is to turn tone segments (and contours) into numerals
@RtTnLtrSeg5 = [TnLtrSeg51 TnLtrSeg52 TnLtrSeg53 TnLtrSeg54 TnLtrSeg55];
@RtTnLtrSeg4 = [TnLtrSeg41 TnLtrSeg42 TnLtrSeg43 TnLtrSeg44 TnLtrSeg45];
@RtTnLtrSeg3 = [TnLtrSeg31 TnLtrSeg32 TnLtrSeg33 TnLtrSeg34 TnLtrSeg35];
@RtTnLtrSeg2 = [TnLtrSeg21 TnLtrSeg22 TnLtrSeg23 TnLtrSeg24 TnLtrSeg25];
@RtTnLtrSeg1 = [TnLtrSeg11 TnLtrSeg12 TnLtrSeg13 TnLtrSeg14 TnLtrSeg15];

@TnContRt5 = [TnContRt51 TnContRt52 TnContRt53 TnContRt54 TnContRt55];
@TnContRt4 = [TnContRt41 TnContRt42 TnContRt43 TnContRt44 TnContRt45];
@TnContRt3 = [TnContRt31 TnContRt32 TnContRt33 TnContRt34 TnContRt35];
@TnContRt2 = [TnContRt21 TnContRt22 TnContRt23 TnContRt24 TnContRt25];
@TnContRt1 = [TnContRt11 TnContRt12 TnContRt13 TnContRt14 TnContRt15];

@LftTnLtrSeg5 = [TnLtrSeg15 TnLtrSeg25 TnLtrSeg35 TnLtrSeg45 TnLtrSeg55];
@LftTnLtrSeg4 = [TnLtrSeg14 TnLtrSeg24 TnLtrSeg34 TnLtrSeg44 TnLtrSeg54];
@LftTnLtrSeg3 = [TnLtrSeg13 TnLtrSeg23 TnLtrSeg33 TnLtrSeg43 TnLtrSeg53];
@LftTnLtrSeg2 = [TnLtrSeg12 TnLtrSeg22 TnLtrSeg32 TnLtrSeg42 TnLtrSeg52];
@LftTnLtrSeg1 = [TnLtrSeg11 TnLtrSeg21 TnLtrSeg31 TnLtrSeg41 TnLtrSeg51];

@TnContLft5 = [TnContLft15 TnContLft25 TnContLft35 TnContLft45 TnContLft55];
@TnContLft4 = [TnContLft14 TnContLft24 TnContLft34 TnContLft44 TnContLft54];
@TnContLft3 = [TnContLft13 TnContLft23 TnContLft33 TnContLft43 TnContLft53];
@TnContLft2 = [TnContLft12 TnContLft22 TnContLft32 TnContLft42 TnContLft52];
@TnContLft1 = [TnContLft11 TnContLft21 TnContLft31 TnContLft41 TnContLft51];

@TnStaffRt = [TnStaffRt5 TnStaffRt4 TnStaffRt3 TnStaffRt2 TnStaffRt1 ];
@TnStaffLft = [TnStaffLft5 TnStaffLft4 TnStaffLft3 TnStaffLft2 TnStaffLft1 ];
@SupNum = [SupFive SupFour SupThree SupTwo SupOne];

lookup tnnr_sub {
  lookupflag 0;
    sub [@RtTnLtrSeg5 @TnContRt5] by SupFive;
    sub [@RtTnLtrSeg4 @TnContRt4] by SupFour;
    sub [@RtTnLtrSeg3 @TnContRt3] by SupThree;
    sub [@RtTnLtrSeg2 @TnContRt2] by SupTwo;
    sub [@RtTnLtrSeg1 @TnContRt1] by SupOne;
    sub @TnStaffRt by @SupNum;
} tnnr_sub;

lookup tnnl_sub {
  lookupflag 0;
    sub [@LftTnLtrSeg5 @TnContLft5] by SupFive;
    sub [@LftTnLtrSeg4 @TnContLft4] by SupFour;
    sub [@LftTnLtrSeg3 @TnContLft3] by SupThree;
    sub [@LftTnLtrSeg2 @TnContLft2] by SupTwo;
    sub [@LftTnLtrSeg1 @TnContLft1] by SupOne;
    sub @TnStaffLft by @SupNum;
} tnnl_sub;

lookup tnn_ctx {
  lookupflag 0;
    sub @TnContRt'lookup tnnr_sub @TnLtrSeg'lookup tnnr_sub @TnLtrSeg'lookup tnnr_sub 
      @TnLtrSeg'lookup tnnr_sub @TnLtrSeg'lookup tnnr_sub @TnLtrSeg'lookup tnnr_sub 
      @TnStaffRt'lookup tnnr_sub; 
    sub @TnContRt'lookup tnnr_sub @TnLtrSeg'lookup tnnr_sub @TnLtrSeg'lookup tnnr_sub 
      @TnLtrSeg'lookup tnnr_sub @TnLtrSeg'lookup tnnr_sub 
      @TnStaffRt'lookup tnnr_sub; 
    sub @TnContRt'lookup tnnr_sub @TnLtrSeg'lookup tnnr_sub @TnLtrSeg'lookup tnnr_sub 
      @TnLtrSeg'lookup tnnr_sub 
      @TnStaffRt'lookup tnnr_sub; 
    sub @TnContRt'lookup tnnr_sub @TnLtrSeg'lookup tnnr_sub @TnLtrSeg'lookup tnnr_sub 
      @TnStaffRt'lookup tnnr_sub; 
    sub @TnContRt'lookup tnnr_sub @TnLtrSeg'lookup tnnr_sub 
      @TnStaffRt'lookup tnnr_sub; 
    sub @TnContRt'lookup tnnr_sub 
      @TnStaffRt'lookup tnnr_sub; 

    sub @TnStaffLft'lookup tnnl_sub @TnLtrSeg'lookup tnnl_sub @TnLtrSeg'lookup tnnl_sub 
      @TnLtrSeg'lookup tnnl_sub @TnLtrSeg'lookup tnnl_sub @TnLtrSeg'lookup tnnl_sub 
      @TnContLft'lookup tnnl_sub;
    sub @TnStaffLft'lookup tnnl_sub @TnLtrSeg'lookup tnnl_sub @TnLtrSeg'lookup tnnl_sub 
      @TnLtrSeg'lookup tnnl_sub @TnLtrSeg'lookup tnnl_sub 
      @TnContLft'lookup tnnl_sub;
    sub @TnStaffLft'lookup tnnl_sub @TnLtrSeg'lookup tnnl_sub @TnLtrSeg'lookup tnnl_sub 
      @TnLtrSeg'lookup tnnl_sub 
      @TnContLft'lookup tnnl_sub;
    sub @TnStaffLft'lookup tnnl_sub @TnLtrSeg'lookup tnnl_sub @TnLtrSeg'lookup tnnl_sub 
      @TnContLft'lookup tnnl_sub;
    sub @TnStaffLft'lookup tnnl_sub @TnLtrSeg'lookup tnnl_sub 
      @TnContLft'lookup tnnl_sub;
    sub @TnStaffLft'lookup tnnl_sub 
      @TnContLft'lookup tnnl_sub;
} tnn_ctx;

# hide the tone bar staves
#  place after tone numbers lookup so it has less precedence
lookup tnh_sub {
  lookupflag 0;
    sub @TnLtrs by @TnLtrsNo;
    sub @LftStemTnLtrs by @LftStemTnLtrsNo;
    sub @TnStaffRt by @TnStaffRtNo;
    sub @TnStaffLft by @TnStaffLftNo;
} tnh_sub;

lookup bhk_sub {
  lookupflag 0;
    sub LtnCapBHook from [LtnCapBHook.TopBar ];
    sub LtnSmBHook.sc from [LtnSmBHook.TopBar.sc ];
} bhk_sub;

lookup dhk_sub {
  lookupflag 0;
    sub LtnCapDHook from [LtnCapDHook.TopBar ];
    sub LtnSmDHook.sc from [LtnSmDHook.TopBar.sc ];
} dhk_sub;

lookup ezhcurl_sub {
  lookupflag 0;
    sub LtnSmEzhCurl from [LtnSmEzhCurl.LrgBowl ];
} ezhcurl_sub;

lookup ezh_sub {
  lookupflag 0;
    sub LtnCapEzh from [LtnCapEzh.RevSigmaStyle ];
    sub CyCapAbkhasDze from [CyCapAbkhasDze.RevSigmaStyle ];
    sub LtnSmEzh.sc from [LtnSmEzh.RevSigmaStyle.sc ];
    sub CySmAbkhasDze.sc from [CySmAbkhasDze.RevSigmaStyle.sc ];
} ezh_sub;

lookup rams_sub {
  lookupflag 0;
    sub LtnSmRamsHorn from [LtnSmRamsHorn.LrgBowl LtnSmRamsHorn.GammaStyle ];
} rams_sub;

lookup hstrk_sub {
  lookupflag 0;
    sub LtnCapHStrk from [LtnCapHStrk.VertStrk ];
    sub LtnSmHStrk.sc from [LtnSmHStrk.VertStrk.sc ];
} hstrk_sub;

lookup jstrk_sub {
  lookupflag 0;
    sub LtnSmDotlessJStrkHook from [LtnSmDotlessJStrkHook.DblSerif ];
} jstrk_sub;

lookup engs_sub {
  lookupflag 0;
    sub LtnCapEng from [LtnCapEng.BaselineHook LtnCapEng.UCStyle LtnCapEng.Kom ];
    sub LtnSmEng.sc from [LtnSmEng.BaselineHook.sc LtnSmEng.UCStyle.sc LtnSmEng.Kom.sc ];
} engs_sub;

lookup nhk_sub {
  lookupflag 0;
    sub LtnCapNLftHook from [LtnCapNLftHook.LCStyle ];
    sub LtnSmNLftHook.sc from [LtnSmNLftHook.LCStyle.sc ];
} nhk_sub;

lookup opno_sub {
  lookupflag 0;
    sub LtnSmOpnO from [LtnSmOpnO.TopSerif ];
    sub LtnSupSmOpnO from [LtnSupSmOpnO.TopSerif ];
    sub LtnSmOpnORetrHook from [LtnSmOpnORetrHook.TopSerif ];
    sub LtnCapOpnO from [LtnCapOpnO.TopSerif ];
    sub LtnSmCapOpnO from [LtnSmCapOpnO.TopSerif ];
    sub LtnSmOpnO.sc from [LtnSmOpnO.TopSerif.sc ];
} opno_sub;

lookup ou_sub {
  lookupflag 0;
    sub LtnSmOu from [LtnSmOu.OpenTop ];
    sub LtnCapOu from [LtnCapOu.OpenTop ];
    sub ModCapOu from [ModCapOu.OpenTop ];
    sub LtnSmCapOu from [LtnSmCapOu.OpenTop ];
    sub LtnSmOu.sc from [LtnSmOu.OpenTop.sc ];
} ou_sub;

lookup phk_sub {
  lookupflag 0;
    sub LtnSmPHook from [LtnSmPHook.BowlHook ];
} phk_sub;

lookup rtl_sub {
  lookupflag 0;
    sub LtnCapRHookTail from [LtnCapSmRHookTail ];
    sub LtnSmRHookTail.sc from [LtnSmCapSmRHookTail ];
} rtl_sub;

lookup thk_sub {
  lookupflag 0;
    sub LtnCapTHook from [LtnCapTHook.RtHook ];
    sub LtnSmTHook.sc from [LtnSmTHook.RtHook.sc ];
} thk_sub;

lookup vhk_sub {
  lookupflag 0;
    sub LtnSmVHook from [LtnSmVHook.StraightLft LtnSmVHook.StraightLftHighHook ];
    sub ModSmVHook from [ModSmVHook.StraightLft ModSmVHook.StraightLftHighHook ];
    sub LtnCapVHook from [LtnCapVHook.StraightLft LtnCapVHook.StraightLftHighHook ];
    sub LtnSmVHook.sc from [LtnSmVHook.StraightLft.sc LtnSmVHook.StraightLftHighHook.sc ];
} vhk_sub;

lookup yhk_sub {
  lookupflag 0;
    sub LtnCapYHook.RtHook from [LtnCapYHook ];
    sub LtnSmYHook.RtHook.sc from [LtnSmYHook.sc ];
} yhk_sub;

lookup apos_sub {
  lookupflag 0;
    sub LtnCapSaltillo from [LtnCapSaltillo.Lrg ];
    sub LtnSmSaltillo from [LtnSmSaltillo.Lrg ];
    sub ModApos from [ModApos.Lrg ];
    sub LtnSmSaltillo.sc from [LtnSmSaltillo.Lrg.sc ];
} apos_sub;

lookup colon_sub {
  lookupflag 0;
    sub ModLowColon from [ModLowColon.Wide ];
} colon_sub;

lookup ognk_sub {
  lookupflag 0;
    sub @cno_rtrhk by @c_rtrhk;
} ognk_sub;

lookup caron_sub {
  lookupflag 0;
    sub LtnSmDCaron from [LtnSmDCaron.Caron ];
    sub LtnSmLCaron from [LtnSmLCaron.Caron ];
    sub LtnCapLCaron from [LtnCapLCaron.Caron ];
    sub LtnSmTCaron from [LtnSmTCaron.Caron ];
    sub LtnSmLCaron.sc from [LtnSmLCaron.Caron.sc ];
} caron_sub;

lookup kayan_grave_sub {
  lookupflag 0;
    sub @c_grave_comp by @c_grave_base CombGrave;
} kayan_grave_sub;

lookup kayan_grave_ctx {
  lookupflag 0;
    sub @c_grave_comp'lookup kayan_grave_sub CombAcute;
} kayan_grave_ctx;

lookup kayan_sub {
  lookupflag MarkAttachmentType @MarkClass1;
    sub CombGrave CombAcute by CombKayanGraveAcute;
} kayan_sub;

lookup mce_sub {
  lookupflag 0;
    sub CySmE from [CySmE.MongolStyle ];
    sub CyCapE from [CyCapE.MongolStyle ];
    sub CySmE.sc from [CySmE.MongolStyle.sc ];
} mce_sub;

lookup shha_sub {
  lookupflag 0;
    sub CySmShha from [CySmShha.UCStyle ];
} shha_sub;

lookup brvc_sub {
  lookupflag 0;
    sub CombBreve from [CombBreve.CyShortMrkAlt ];
} brvc_sub;

lookup chnntc_sub {
  lookupflag 0;
    sub ModVertLine from [ModVertLine.ChinantecTn ];
    sub ModAcuteAccent from [ModAcuteAccent.ChinantecTn ];
    sub ModGraveAccent from [ModGraveAccent.ChinantecTn ];
    sub ModMacron from [ModChinantecTnMrkHorizBar ];
} chnntc_sub;

lookup set_sub {
  lookupflag 0;
    sub EmptySet from [EmptySet.SlashZero ];
} set_sub;

lookup lit_sub {
  lookupflag 0;
    sub @cno_lit by @c_lit;
} lit_sub;

lookup lita_sub {
  lookupflag 0;
    sub @cno_lita by @c_lita;
} lita_sub;

lookup litg_sub {
  lookupflag 0;
    sub @cno_litg by @c_litg;
} litg_sub;

lookup bbwl_sub {
  lookupflag 0;
    # sub @cno_BarBowl by @c_BarBowl; wrongly maps LtnSmG to LtnSmG.BarBowl
    sub @cno_barbowl by @c_barbowl;
    sub LtnSmGStrk by LtnSmG.BarBowl;
    sub LtnSmGStrk.SngBowl by LtnSmG.BarBowl.SngBowl;
    sub LtnSmGStrk.sc by LtnSmG.BarBowl.sc;
    sub LtnSmGStrk.SngBowl.sc by LtnSmG.BarBowl.SngBowl.sc;
} bbwl_sub;

lookup sital_sub {
  lookupflag 0;
    sub @cno_sital by @c_sital;
} sital_sub;

# Gentium
lookup srfb_sub {
  lookupflag 0;
    sub GrSmBeta from [GrSmBeta.Serif ];
    sub GrSubSmBeta from [GrSubSmBeta.Serif ];
    sub ModSmBeta from [ModSmBeta.Serif ];
} srfb_sub;

lookup pcx_sub {
  lookupflag 0;
    sub @cno_Por by @c_Por;
} pcx_sub;

lookup iota_sub {
  lookupflag 0;
	sub @cno_iotasub by @c_iotasub;
} iota_sub;

languagesystem DFLT dflt;
languagesystem cyrl dflt;
languagesystem cyrl SRB;
languagesystem latn dflt;
languagesystem latn IPPH;
languagesystem latn VIT;
languagesystem grek dflt;

feature aalt {
#  feature ccmp; #exclude because of tone ligatures
  feature locl;
  feature smcp;
  feature c2sc;
#  feature liga; #cannot include many-to-one substitutions
  feature cv13;
  feature cv17;
  feature cv19;
  feature cv20;
  feature cv25;
  feature cv28;
  feature cv37;
  feature cv43;
  feature cv44;
  feature cv46;
  feature cv47;
  feature cv49;
  feature cv55;
  feature cv57;
  feature cv62;
  feature cv68;
  feature cv70;
  feature cv71;
  feature cv75;
  feature cv76;
  feature cv77;
  feature cv80;
  feature cv81;
  feature cv82;
  feature cv90;
  feature cv91;
  feature cv92;
  feature cv98;
  feature cv14; #Gentium
  feature cv78; #Gentium
  feature cv83; #Gentium
  feature ss01;
  feature ss04;
  feature ss05;
  feature ss11; #non-Andika
  feature ss12; #non-Andika
} aalt;

feature ccmp {
  lookup di_ctx;
  lookup ss_ctx;
  lookup tn_ctx;
  lookup tne_ctx;

  script latn;
    language VIT  ;
      lookup vd_sub;
      lookup vc_sub;
} ccmp;

feature locl {
  script cyrl;
    language SRB  exclude_dflt;
      lookup srb_sub;
} locl;

feature smcp {
  lookup sc1_sub;
} smcp;

feature c2sc {
  lookup sc2_sub;
} c2sc;

feature liga {
  lookup f_sub;
} liga;

feature cv13 {

  cvParameters {
      FeatUILabelNameID {
       name 3 1 0x0409 "Capital B-hook alternate";  # English US
       name 1 0 0 "Capital B-hook alternate";  # Mac English
      };
      
      FeatUITooltipTextNameID {
       name 3 1 0x0409 "Cap B-hook alt";  # English US
       name 1 0 0 "Cap B-hook alt";  # Mac English
      };
      
      SampleTextNameID {
       name 3 1 0x0409 "Ɓ";  # English US
       name 1 0 0 "?";  # Mac English
      };
      
      ParamUILabelNameID {
       name 3 1 0x0409 "Lowercase style";  # English US
       name 1 0 0 "Lowercase style";  # Mac English
      };
  };

  lookup bhk_sub;
} cv13;

feature cv17 {

  cvParameters {
      FeatUILabelNameID {
       name 3 1 0x0409 "Capital D-hook alternate";  # English US
       name 1 0 0 "Capital D-hook alternate";  # Mac English
      };
      
      FeatUITooltipTextNameID {
       name 3 1 0x0409 "Cap D-hook alt";  # English US
       name 1 0 0 "Cap D-hook alt";  # Mac English
      };
      
      SampleTextNameID {
       name 3 1 0x0409 "Ɗ";  # English US
       name 1 0 0 "?";  # Mac English
      };
      
      ParamUILabelNameID {
       name 3 1 0x0409 "Lowercase style";  # English US
       name 1 0 0 "Lowercase style";  # Mac English
      };
  };

  lookup dhk_sub;
} cv17;

feature cv19 {

  cvParameters {
      FeatUILabelNameID {
       name 3 1 0x0409 "Small ezh-curl alternate";  # English US
       name 1 0 0 "Small ezh-curl alternate";  # Mac English
      };
      
      FeatUITooltipTextNameID {
       name 3 1 0x0409 "Sm ezh-curl alt";  # English US
       name 1 0 0 "Sm ezh-curl alt";  # Mac English
      };
      
      SampleTextNameID {
       name 3 1 0x0409 "ʓ";  # English US
       name 1 0 0 "?";  # Mac English
      };
      
      ParamUILabelNameID {
       name 3 1 0x0409 "Large bowl";  # English US
       name 1 0 0 "Large bowl";  # Mac English
      };
  };

  lookup ezhcurl_sub;
} cv19;

feature cv20 {

  cvParameters {
      FeatUILabelNameID {
       name 3 1 0x0409 "Capital Ezh alternates";  # English US
       name 1 0 0 "Capital Ezh alternates";  # Mac English
      };
      
      FeatUITooltipTextNameID {
       name 3 1 0x0409 "Cap Ezh alts";  # English US
       name 1 0 0 "Cap Ezh alts";  # Mac English
      };
      
      SampleTextNameID {
       name 3 1 0x0409 "ƷӠ";  # English US
       name 1 0 0 "?";  # Mac English
      };
      
      ParamUILabelNameID {
       name 3 1 0x0409 "Reversed sigma";  # English US
       name 1 0 0 "Reversed sigma";  # Mac English
      };
  };

  lookup ezh_sub;
} cv20;

feature cv25 {

  cvParameters {
      FeatUILabelNameID {
       name 3 1 0x0409 "Rams horn alternates";  # English US
       name 1 0 0 "Rams horn alternates";  # Mac English
      };
      
      FeatUITooltipTextNameID {
       name 3 1 0x0409 "Rams horn alts";  # English US
       name 1 0 0 "Rams horn alts";  # Mac English
      };
      
      SampleTextNameID {
       name 3 1 0x0409 "ɤ";  # English US
       name 1 0 0 "?";  # Mac English
      };
      
      ParamUILabelNameID {
       name 3 1 0x0409 "Large Bowl";  # English US
       name 1 0 0 "Large Bowl";  # Mac English
      };

      ParamUILabelNameID {
       name 3 1 0x0409 "Small gamma";  # English US
       name 1 0 0 "Small gamma";  # Mac English
      };
  };

  lookup rams_sub;
} cv25;

feature cv28 {

  cvParameters {
      FeatUILabelNameID {
       name 3 1 0x0409 "Capital H-stroke alternate";  # English US
       name 1 0 0 "Capital H-stroke alternate";  # Mac English
      };
      
      FeatUITooltipTextNameID {
       name 3 1 0x0409 "Cap H-stroke alt";  # English US
       name 1 0 0 "Cap H-stroke alt";  # Mac English
      };
      
      SampleTextNameID {
       name 3 1 0x0409 "Ħ";  # English US
       name 1 0 0 "?";  # Mac English
      };
      
      ParamUILabelNameID {
       name 3 1 0x0409 "Vertical-stroke";  # English US
       name 1 0 0 "Vertical-stroke";  # Mac English
      };
  };

  lookup hstrk_sub;
} cv28;

feature cv37 {

  cvParameters {
      FeatUILabelNameID {
       name 3 1 0x0409 "J-stroke hook alternate";  # English US
       name 1 0 0 "J-stroke hook alternate";  # Mac English
      };
      
      FeatUITooltipTextNameID {
       name 3 1 0x0409 "J-strok alt";  # English US
       name 1 0 0 "J-strok alt";  # Mac English
      };
      
      SampleTextNameID {
       name 3 1 0x0409 "ʄ";  # English US
       name 1 0 0 "?";  # Mac English
      };
      
      ParamUILabelNameID {
       name 3 1 0x0409 "Top serif";  # English US
       name 1 0 0 "Top serif";  # Mac English
      };
  };

  lookup jstrk_sub;
} cv37;

feature cv43 {

  cvParameters {
      FeatUILabelNameID {
       name 3 1 0x0409 "Uppercase Eng alternates";  # English US
       name 1 0 0 "Uppercase Eng alternates";  # Mac English
      };
      
      FeatUITooltipTextNameID {
       name 3 1 0x0409 "Uppercase Eng alts";  # English US
       name 1 0 0 "Uppercase Eng alts";  # Mac English
      };
      
      SampleTextNameID {
       name 3 1 0x0409 "Ŋ";  # English US
       name 1 0 0 "?";  # Mac English
      };
      
      ParamUILabelNameID {
       name 3 1 0x0409 "Large eng on baseline";  # English US
       name 1 0 0 "Large eng on baseline";  # Mac English
      };

      ParamUILabelNameID {
       name 3 1 0x0409 "Capital N with tail";  # English US
       name 1 0 0 "Capital N with tail";  # Mac English
      };

      ParamUILabelNameID {
       name 3 1 0x0409 "Large eng with short stem";  # English US
       name 1 0 0 "Large eng with short stem";  # Mac English
      };
  };

  lookup engs_sub;
} cv43;

feature cv44 {

  cvParameters {
      FeatUILabelNameID {
       name 3 1 0x0409 "Capital N-left-hook alternate";  # English US
       name 1 0 0 "Capital N-left-hook alternate";  # Mac English
      };
      
      FeatUITooltipTextNameID {
       name 3 1 0x0409 "Cap N-left-hook alt";  # English US
       name 1 0 0 "Cap N-left-hook alt";  # Mac English
      };
      
      SampleTextNameID {
       name 3 1 0x0409 "Ɲ";  # English US
       name 1 0 0 "?";  # Mac English
      };
      
      ParamUILabelNameID {
       name 3 1 0x0409 "Lowercase style";  # English US
       name 1 0 0 "Lowercase style";  # Mac English
      };
  };

  lookup nhk_sub;
} cv44;

feature cv46 {

  cvParameters {
      FeatUILabelNameID {
       name 3 1 0x0409 "Open-O alternates";  # English US
       name 1 0 0 "Open-O alternates";  # Mac English
      };
      
      FeatUITooltipTextNameID {
       name 3 1 0x0409 "Open-O alts";  # English US
       name 1 0 0 "Open-O alts";  # Mac English
      };
      
      SampleTextNameID {
       name 3 1 0x0409 "Ɔɔᴐᵓᶗ";  # English US
       name 1 0 0 "?";  # Mac English
      };
      
      ParamUILabelNameID {
       name 3 1 0x0409 "Top serif";  # English US
       name 1 0 0 "Top serif";  # Mac English
      };
  };

  lookup opno_sub;
} cv46;

feature cv47 {

  cvParameters {
      FeatUILabelNameID {
       name 3 1 0x0409 "OU alternates";  # English US
       name 1 0 0 "OU alternates";  # Mac English
      };
      
      FeatUITooltipTextNameID {
       name 3 1 0x0409 "OU alts";  # English US
       name 1 0 0 "OU alts";  # Mac English
      };
      
      SampleTextNameID {
       name 3 1 0x0409 "Ȣȣᴕᴽ";  # English US
       name 1 0 0 "?";  # Mac English
      };
      
      ParamUILabelNameID {
       name 3 1 0x0409 "Open";  # English US
       name 1 0 0 "Open";  # Mac English
      };
  };

  lookup ou_sub;
} cv47;

feature cv49 {

  cvParameters {
      FeatUILabelNameID {
       name 3 1 0x0409 "Small p-hook alternate";  # English US
       name 1 0 0 "Small p-hook alternate";  # Mac English
      };
      
      FeatUITooltipTextNameID {
       name 3 1 0x0409 "Sm p-hook alt";  # English US
       name 1 0 0 "Sm p-hook alt";  # Mac English
      };
      
      SampleTextNameID {
       name 3 1 0x0409 "ƥ";  # English US
       name 1 0 0 "?";  # Mac English
      };
      
      ParamUILabelNameID {
       name 3 1 0x0409 "Right hook";  # English US
       name 1 0 0 "Right hook";  # Mac English
      };
  };

  lookup phk_sub;
} cv49;

feature cv55 {

  cvParameters {
      FeatUILabelNameID {
       name 3 1 0x0409 "Capital R-tail alternate";  # English US
       name 1 0 0 "Capital R-tail alternate";  # Mac English
      };
      
      FeatUITooltipTextNameID {
       name 3 1 0x0409 "Cap R-tail alt";  # English US
       name 1 0 0 "Cap R-tail alt";  # Mac English
      };
      
      SampleTextNameID {
       name 3 1 0x0409 "Ɽ";  # English US
       name 1 0 0 "?";  # Mac English
      };
      
      ParamUILabelNameID {
       name 3 1 0x0409 "Lowercase style";  # English US
       name 1 0 0 "Lowercase style";  # Mac English
      };
  };

  lookup rtl_sub;
} cv55;

feature cv57 {

  cvParameters {
      FeatUILabelNameID {
       name 3 1 0x0409 "Capital T-hook alternate";  # English US
       name 1 0 0 "Capital T-hook alternate";  # Mac English
      };
      
      FeatUITooltipTextNameID {
       name 3 1 0x0409 "Cap T-hook alt";  # English US
       name 1 0 0 "Cap T-hook alt";  # Mac English
      };
      
      SampleTextNameID {
       name 3 1 0x0409 "Ƭ";  # English US
       name 1 0 0 "?";  # Mac English
      };
      
      ParamUILabelNameID {
       name 3 1 0x0409 "Right Hook";  # English US
       name 1 0 0 "Right Hook";  # Mac English
      };
  };

  lookup thk_sub;
} cv57;

feature cv62 {

  cvParameters {
      FeatUILabelNameID {
       name 3 1 0x0409 "V-hook alternates";  # English US
       name 1 0 0 "V-hook alternates";  # Mac English
      };
      
      FeatUITooltipTextNameID {
       name 3 1 0x0409 "V-hook alts";  # English US
       name 1 0 0 "V-hook alts";  # Mac English
      };
      
      SampleTextNameID {
       name 3 1 0x0409 "Ʋʋᶹ";  # English US
       name 1 0 0 "?";  # Mac English
      };
      
      ParamUILabelNameID {
       name 3 1 0x0409 "Straight with low hook";  # English US
       name 1 0 0 "Straight with low hook";  # Mac English
      };

      ParamUILabelNameID {
       name 3 1 0x0409 "Straight with high hook";  # English US
       name 1 0 0 "Straight with high hook";  # Mac English
      };

  };

  lookup vhk_sub;
} cv62;

feature cv68 {

  cvParameters {
      FeatUILabelNameID {
       name 3 1 0x0409 "Capital Y-hook alternate";  # English US
       name 1 0 0 "Capital Y-hook alternate";  # Mac English
      };
      
      FeatUITooltipTextNameID {
       name 3 1 0x0409 "Cap Y-hook alt";  # English US
       name 1 0 0 "Cap Y-hook alt";  # Mac English
      };
      
      SampleTextNameID {
       name 3 1 0x0409 "ƴ";  # English US
       name 1 0 0 "?";  # Mac English
      };
      
      ParamUILabelNameID {
       name 3 1 0x0409 "Left hook";  # English US
       name 1 0 0 "Left hook";  # Mac English
      };
  };

  lookup yhk_sub;
} cv68;

feature cv70 {

  cvParameters {
      FeatUILabelNameID {
       name 3 1 0x0409 "Modifier apostrophe alternates";  # English US
       name 1 0 0 "Modifier apostrophe alternates";  # Mac English
      };
      
      FeatUITooltipTextNameID {
       name 3 1 0x0409 "Mod apostrophe alt";  # English US
       name 1 0 0 "Mod apostrophe alt";  # Mac English
      };
      
      SampleTextNameID {
       name 3 1 0x0409 "ʼꞋꞌ";  # English US
       name 1 0 0 "?";  # Mac English
      };
      
      ParamUILabelNameID {
       name 3 1 0x0409 "Large";  # English US
       name 1 0 0 "Large";  # Mac English
      };
  };

  lookup apos_sub;
} cv70;

feature cv71 {

  cvParameters {
      FeatUILabelNameID {
       name 3 1 0x0409 "Modifier colon alternate";  # English US
       name 1 0 0 "Modifier colon alternate";  # Mac English
      };
      
      FeatUITooltipTextNameID {
       name 3 1 0x0409 "Mod colon alt";  # English US
       name 1 0 0 "Mod colon alt";  # Mac English
      };
      
      SampleTextNameID {
       name 3 1 0x0409 "꞉";  # English US
       name 1 0 0 "?";  # Mac English
      };
      
      ParamUILabelNameID {
       name 3 1 0x0409 "Expanded";  # English US
       name 1 0 0 "Expanded";  # Mac English
      };
  };

  lookup colon_sub;
} cv71;

feature cv75 {

  cvParameters {
      FeatUILabelNameID {
       name 3 1 0x0409 "Vietnamese-style diacritics";  # English US
       name 1 0 0 "Vietnamese-style diacritics";  # Mac English
      };
      
      FeatUITooltipTextNameID {
       name 3 1 0x0409 "Viet diacritics";  # English US
       name 1 0 0 "Viet diacritics";  # Mac English
      };
      
      SampleTextNameID {
       name 3 1 0x0409 "sample_text";  # English US TODO: add sample_text
       name 1 0 0 "?";  # Mac English
      };
      
      ParamUILabelNameID {
       name 3 1 0x0409 "Vietnamese-style";  # English US
       name 1 0 0 "Vietnamese-style";  # Mac English
      };
  };

  lookup vd_sub;
  lookup vc_sub;
} cv75;

feature cv76 {

  cvParameters {
      FeatUILabelNameID {
       name 3 1 0x0409 "Ogonek alternate";  # English US
       name 1 0 0 "Ogonek alternate";  # Mac English
      };
      
      FeatUITooltipTextNameID {
       name 3 1 0x0409 "Ogonek alt";  # English US
       name 1 0 0 "Ogonek alt";  # Mac English
      };
      
      SampleTextNameID {
       name 3 1 0x0409 "ĄąĘęĮįǫǪŲų";  # English US
       name 1 0 0 "?";  # Mac English
      };
      
      ParamUILabelNameID {
       name 3 1 0x0409 "Straight";  # English US
       name 1 0 0 "Straight";  # Mac English
      };
  };

  lookup ognk_sub;
} cv76;

feature cv77 {

  cvParameters {
      FeatUILabelNameID {
       name 3 1 0x0409 "Non-European caron alternates";  # English US
       name 1 0 0 "Non-European caron alternates";  # Mac English
      };
      
      FeatUITooltipTextNameID {
       name 3 1 0x0409 "Non-Eur caron alts";  # English US
       name 1 0 0 "Non-Eur caron alts";  # Mac English
      };
      
      SampleTextNameID {
       name 3 1 0x0409 "ďľĽť";  # English US
       name 1 0 0 "?";  # Mac English
      };
      
      ParamUILabelNameID {
       name 3 1 0x0409 "Non-European style";  # English US
       name 1 0 0 "Non-European style";  # Mac English
      };
  };

  lookup caron_sub;
} cv77;

# this may not be a valid CV since it uses a many-to-one sub
feature cv79 {

  cvParameters {
      FeatUILabelNameID {
       name 3 1 0x0409 "Kayan diacritics";  # English US
       name 1 0 0 "Kayan diacritics";  # Mac English
      };
      
      FeatUITooltipTextNameID {
       name 3 1 0x0409 "Kayan diacritics";  # English US
       name 1 0 0 "Kayan diacritics";  # Mac English
      };
      
      SampleTextNameID {
       name 3 1 0x0409 "sample_text";  # English US TODO: set sample_text
       name 1 0 0 "?";  # Mac English
      };
      
      ParamUILabelNameID {
       name 3 1 0x0409 "Kayan style";  # English US
       name 1 0 0 "Kayan style";  # Mac English
      };
  };

  lookup kayan_grave_ctx;
  lookup kayan_sub;
} cv79;

feature cv80 {

  cvParameters {
      FeatUILabelNameID {
       name 3 1 0x0409 "Mongolian-style Cyrillic E";  # English US
       name 1 0 0 "Mongolian-style Cyrillic E";  # Mac English
      };
      
      FeatUITooltipTextNameID {
       name 3 1 0x0409 "Mongol-style Cyr E";  # English US
       name 1 0 0 "Mongol-style Cyr E";  # Mac English
      };
      
      SampleTextNameID {
       name 3 1 0x0409 "Ээ";  # English US
       name 1 0 0 "?";  # Mac English
      };
      
      ParamUILabelNameID {
       name 3 1 0x0409 "Mongolian-style";  # English US
       name 1 0 0 "Mongolian-style";  # Mac English
      };
  };

  lookup mce_sub;
} cv80;

feature cv81 {

  cvParameters {
      FeatUILabelNameID {
       name 3 1 0x0409 "Cyrillic shha alternate";  # English US
       name 1 0 0 "Cyrillic shha alternate";  # Mac English
      };
      
      FeatUITooltipTextNameID {
       name 3 1 0x0409 "Cyr shha alt";  # English US
       name 1 0 0 "Cyr shha alt";  # Mac English
      };
      
      SampleTextNameID {
       name 3 1 0x0409 "һ";  # English US
       name 1 0 0 "?";  # Mac English
      };
      
      ParamUILabelNameID {
       name 3 1 0x0409 "Uppercase style";  # English US
       name 1 0 0 "Uppercase style";  # Mac English
      };
  };

  lookup shha_sub;
} cv81;

feature cv82 {

  cvParameters {
      FeatUILabelNameID {
       name 3 1 0x0409 "Combining breve Cyrillic form";  # English US
       name 1 0 0 "Combining breve Cyrillic form";  # Mac English
      };
      
      FeatUITooltipTextNameID {
       name 3 1 0x0409 "Breve Cyr form";  # English US
       name 1 0 0 "Breve Cyr form";  # Mac English
      };
      
      SampleTextNameID {
       name 3 1 0x0409 "̆";  # English US
       name 1 0 0 "?";  # Mac English
      };
      
      ParamUILabelNameID {
       name 3 1 0x0409 "Cyrillic-style";  # English US
       name 1 0 0 "Cyrillic-style";  # Mac English
      };
  };

  lookup brvc_sub;
} cv82;

feature cv90 {

  cvParameters {
      FeatUILabelNameID {
       name 3 1 0x0409 "Chinantec tones";  # English US
       name 1 0 0 "Chinantec tones";  # Mac English
      };
      
      FeatUITooltipTextNameID {
       name 3 1 0x0409 "Chinantec tones";  # English US
       name 1 0 0 "Chinantec tones";  # Mac English
      };
      
      SampleTextNameID {
       name 3 1 0x0409 "ˈˉˊˋ";  # English US
       name 1 0 0 "?";  # Mac English
      };
      
      ParamUILabelNameID {
       name 3 1 0x0409 "Chinantec-style";  # English US
       name 1 0 0 "Chinantec-style";  # Mac English
      };
  };

  lookup chnntc_sub;
} cv90;

feature cv91 {

  cvParameters {
      FeatUILabelNameID {
       name 3 1 0x0409 "Tone numbers";  # English US
       name 1 0 0 "Tone numbers";  # Mac English
      };
      
      FeatUITooltipTextNameID {
       name 3 1 0x0409 "Tone numbers";  # English US
       name 1 0 0 "Tone numbers";  # Mac English
      };
      
      SampleTextNameID {
       name 3 1 0x0409 "˩˨˧˦˥꜖꜕꜔꜓꜒";  # English US
       name 1 0 0 "?";  # Mac English
      };
      
      ParamUILabelNameID {
       name 3 1 0x0409 "Numbers";  # English US
       name 1 0 0 "Numbers";  # Mac English
      };
  };

  lookup tnn_sub;
  lookup tnn_ctx;
} cv91;

feature cv92 {

  cvParameters {
      FeatUILabelNameID {
       name 3 1 0x0409 "Hide tone contour staves";  # English US
       name 1 0 0 "Hide tone contour staves";  # Mac English
      };
      
      FeatUITooltipTextNameID {
       name 3 1 0x0409 "Hide tone staves";  # English US
       name 1 0 0 "Hide tone staves";  # Mac English
      };
      
      SampleTextNameID {
       name 3 1 0x0409 "˩˨˧˦˥꜖꜕꜔꜓꜒";  # English US
       name 1 0 0 "?";  # Mac English
      };
      
      ParamUILabelNameID {
       name 3 1 0x0409 "True";  # English US
       name 1 0 0 "True";  # Mac English
      };
  };

  lookup tnh_sub;
} cv92;

feature cv98 {

  cvParameters {
      FeatUILabelNameID {
       name 3 1 0x0409 "Empty set alternate";  # English US
       name 1 0 0 "Empty set alternate";  # Mac English
      };
      
      FeatUITooltipTextNameID {
       name 3 1 0x0409 "Empty set alt";  # English US
       name 1 0 0 "Empty set alt";  # Mac English
      };
      
      SampleTextNameID {
       name 3 1 0x0409 "∅";  # English US
       name 1 0 0 "?";  # Mac English
      };
      
      ParamUILabelNameID {
       name 3 1 0x0409 "Zero";  # English US
       name 1 0 0 "Zero";  # Mac English
      };
  };

  lookup set_sub;
} cv98;

# Gentium
feature cv14 {

  cvParameters {
      FeatUILabelNameID {
       name 3 1 0x0409 "Serif beta alternates";  # English US
       name 1 0 0 "Serif beta alternates";  # Mac English
      };
      
      FeatUITooltipTextNameID {
       name 3 1 0x0409 "Serif beta alt";  # English US
       name 1 0 0 "Serif beta alt";  # Mac English
      };
      
      SampleTextNameID {
       name 3 1 0x0409 "βᵦᵝ";  # English US
#       name 1 0 0 "\x{03B2}\x{1D66}\x{1D5D}";  # Mac English
      }; #TODO: what should Mac sample be?
      
      ParamUILabelNameID {
       name 3 1 0x0409 "Serif";  # English US
       name 1 0 0 "Serif";  # Mac English
      };
  };

  lookup srfb_sub;
} cv14;

feature cv78 {

  cvParameters {
      FeatUILabelNameID {
       name 3 1 0x0409 "Porsonic circumflex";  # English US
       name 1 0 0 "Porsonic circumflex";  # Mac English
      };
      
      FeatUITooltipTextNameID {
       name 3 1 0x0409 "Porsonic circumflex";  # English US
       name 1 0 0 "Porsonic circumflex";  # Mac English
      };
      
      SampleTextNameID {
       name 3 1 0x0409 "͂ἆἇἎἏἦἧἮἯἶἷἾἿὖὗὟὦὧὮὯᾆᾇᾎᾏᾖᾗᾞᾟᾦᾧᾮᾯᾶᾷ῀῁ῆῇ῏ῖῗ῟ῦῧῶῷ";  # English US
#       name 1 0 0  "U+0342U+1F06U+1F07U+1F0EU+1F0FU+1F26U+1F27U+1F2EU+1F2FU+1F36U+1F37U+1F3EU+1F3FU+1F56U+1F57U+1F5FU+1F66U+1F67U+1F6EU+1F6FU+1F86U+1F87U+1F8EU+1F8FU+1F96U+1F97U+1F9EU+1F9FU+1FA6U+1FA7U+1FAEU+1FAFU+1FB6U+1FB7U+1FC0U+1FC1U+1FC6U+1FC7U+1FCFU+1FD6U+1FD7U+1FDFU+1FE6U+1FE7U+1FF6U+1FF7";  # Mac English
      }; #TODO: what should Mac sample be?
      
      ParamUILabelNameID {
       name 3 1 0x0409 "Porsonic-style";  # English US
       name 1 0 0 "Porsonic-style";  # Mac English
      };
  };

  lookup pcx_sub;
} cv78;

feature cv83 {

  cvParameters {
      FeatUILabelNameID {
       name 3 1 0x0409 "Greek capital iota subscript";  # English US
       name 1 0 0 "Greek capital iota subscript";  # Mac English
      };

      FeatUITooltipTextNameID {
       name 3 1 0x0409 "Greek capital iota subscript";  # English US
       name 1 0 0 "Greek capital iota subscript";  # Mac English
      };

      SampleTextNameID {
       name 3 1 0x0409 "sample_text";  # English US TODO: set sample_text
#       name 1 0 0  "";  # Mac English
      }; #TODO: what should Mac sample be?

      ParamUILabelNameID {
       name 3 1 0x0409 "Subscript-style";  # English US
       name 1 0 0 "Subscript-style";  # Mac English
      };
  };

  lookup iota_sub;
} cv83;


feature ss01 {
  featureNames {
    name 3 1 0x409 "Literacy alternates";
  };

  lookup lit_sub;
} ss01;

feature ss11 {
  featureNames {
    name 3 1 0x409 "Literacy a alternates";
  };

  lookup lita_sub;
} ss11;

feature ss12 {
  featureNames {
    name 3 1 0x409 "Literacy g alternates";
  };

  lookup litg_sub;
} ss12;

feature ss04 {
  featureNames {
    name 3 1 0x409 "Barred-bowl forms";
  };

  lookup bbwl_sub;
} ss04;

feature ss05 {
  featureNames {
    name 3 1 0x409 "Slant italic specials";
  };

  lookup sital_sub;
} ss05;

